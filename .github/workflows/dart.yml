name: Dart

on:
  push:
    branches:
      - '*'   # Specify the branches where push events should trigger the workflow
  pull_request:
    branches:
      - '*'   # Specify the branches where pull request events should trigger the workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Use 'v2' version for checkout action
        with:
          path: 'frontend'  # Specify the path to the "frontend" folder

      - name: Set up Dart
        uses: dart-lang/setup-dart@v1   # Specify the desired version of setup-dart

      - name: Install dependencies
        working-directory: frontend  # Change the working directory to "frontend"
        run: flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   working-directory: frontend  # Change the working directory to "frontend"
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        working-directory: frontend  # Change the working directory to "frontend"
        run: dart analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        working-directory: frontend  # Change the working directory to "frontend"
        run: dart test

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2   # Use 'v2' version for upload-artifact action
        with:
          name: frontend-artifact   # Specify the name for your frontend artifact
          path: frontend/path/to/artifact    # Specify the path to the frontend artifact or files to upload
